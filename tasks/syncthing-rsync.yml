---
- name: Install syncthing-rsync
  ansible.builtin.copy:
    dest: /usr/local/bin/syncthing-rsync
    owner: root
    group: root
    mode: '0755'
    content: |
      #!/bin/bash

      set -euo pipefail

      checksum_time_file="/tmp/syncthing-rsync-last-checksumming"

      extra_args=()

      twelve_hours_ago=$(date -d 'now - 12 hours' '+%s')
      last_checksumming=$(date -r "$checksum_time_file" '+%s' || echo '0')

      # checksumming takes much longer and consumes a lot of CPU, so lets do it
      # max every 12 hours only.
      did_checksum=0
      if (( last_checksumming <= twelve_hours_ago )); then
        echo "enable checksumming"
        extra_args+=(--checksum)
        did_checksum=1
      fi

      doit() {
        local src="$1"
        local dst="$2"

        rsync -av \
          "${extra_args[@]}" \
          --exclude '*.tmp' \
          --link-dest="$src" \
          "$src"/ \
          "$dst"
      }

      # pre-run cooldown so we get to sync more data on the first run of a very
      # active sync
      echo "pre-run cooldown"
      sleep 10

      doit /var/containerbind/syncthing/Camera /var/containerbind/synced_photos/Camera
      doit /var/containerbind/syncthing/Screenshots /var/containerbind/synced_photos/Screenshots
      doit /var/containerbind/syncthing/whatsapp-media /var/containerbind/synced_photos/whatsapp-media

      if [ "$did_checksum" == "1" ]; then
        touch "$checksum_time_file"
      fi

      # post-run cooldown so we don't run this service too often on a
      # long-running and active sync
      echo "post-run cooldown"
      sleep 5m

# This service is a workaround for systemd path units not supporting recursive
# directory watching. We simply do that ourselves using inotifywait and let
# systemd watch a single file instead. Simply starting the service directly is
# not sufficient because we would miss changes that happen while rsync is
# running.
- name: Install syncthing-rsync-watch
  ansible.builtin.copy:
    dest: /usr/local/bin/syncthing-rsync-watch
    owner: root
    group: root
    mode: '0755'
    content: |
      #!/bin/bash

      set -euo pipefail

      inotifywait -m -r -e create -e close_write -e move --format '%w%f' \
        --exclude '.*\.tmp' \
        /var/containerbind/syncthing/Camera \
        /var/containerbind/syncthing/Screenshots \
        /var/containerbind/syncthing/whatsapp-media \
        | while read path
      do
          echo "$path changed"
          date +%s > /tmp/syncthing-files-changed
      done

- name: Replace syncthing-rsync.service
  ansible.builtin.copy:
    dest: /etc/systemd/system/syncthing-rsync.service
    owner: root
    group: root
    mode: '0644'
    content: |
      [Unit]
      Description=Creates a hardlinked copy of the syncthing data (ignoring deletes)

      [Service]
      Type=simple
      ExecStart=/usr/local/bin/syncthing-rsync

      [Install]
      WantedBy=multi-user.target
  notify: reload_systemd

- name: Replace syncthing-rsync-watch.service
  ansible.builtin.copy:
    dest: /etc/systemd/system/syncthing-rsync-watch.service
    owner: root
    group: root
    mode: '0644'
    content: |
      [Unit]
      Description=Watches syncthing data for changes and notifies systemd

      [Service]
      Type=Simple
      ExecStart=/usr/local/bin/syncthing-rsync-watch
      Restart=always
      RestartSec=10

      [Install]
      WantedBy=multi-user.target
  notify: reload_systemd

- name: Replace syncthing-rsync.path
  ansible.builtin.copy:
    dest: /etc/systemd/system/syncthing-rsync.path
    owner: root
    group: root
    mode: '0644'
    content: |
      [Unit]
      Description=Triggers rsync on syncthing data changes

      [Path]
      PathChanged=/tmp/syncthing-files-changed

      [Install]
      WantedBy=multi-user.target
  notify: reload_systemd

- name: Replace syncthing-rsync.timer
  ansible.builtin.copy:
    dest: /etc/systemd/system/syncthing-rsync.timer
    owner: root
    group: root
    mode: '0644'
    content: |
      [Unit]
      Description=Starts rsync regularly in case inotify missed changes

      [Timer]
      OnCalendar=daily
      RandomizedDelaySec=900
      Persistent=true

      [Install]
      WantedBy=timers.target
  notify: reload_systemd

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Start syncthing-rsync.path
  ansible.builtin.systemd:
    name: syncthing-rsync.path
    enabled: true
    state: started

- name: Start syncthing-rsync-watch.service
  ansible.builtin.systemd:
    name: syncthing-rsync-watch.service
    enabled: true
    state: started

- name: Start syncthing-rsync.timer
  ansible.builtin.systemd:
    name: syncthing-rsync.timer
    enabled: true
    state: started
